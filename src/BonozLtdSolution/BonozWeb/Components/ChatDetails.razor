@inherits ChatDetailsBase

@if (SelectedUser is null)
{
    <h2>Please select a user from the connected users list, to start a converstation</h2>
}
else
{
    <div class="flex-grow-1 d-flex flex-column">
        <div class="header d-flex justify-content-between bg-main">
            <h4 class="text-white m-0 p-1">@SelectedUser.Name</h4>
            <button class="btn btn-danger btn-sm" @onclick="HandleCancelClick">x</button>
        </div>
        
        <div class="messages-list">
            
            @if (!string.IsNullOrWhiteSpace(_errorMessage))
            {
                <div class="header d-flex justify-content-between bg-danger">
                    <span class="text-white">@_errorMessage</span>
                    <button class="btn btn-danger btn-sm" @onclick="() => _errorMessage = null">x</button>
                </div>
            }
            @if (!string.IsNullOrWhiteSpace(_infoMessage))
            {
                <div class="header d-flex justify-content-between bg-warning">
                    <span class="text-white">@_infoMessage</span>
                </div>
            }
            <ul id="messages-ul" style="padding: 5px">
                @if (_loadingMessages)
                {
                    <li class="list-group-item">
                        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                        Loading messages...
                    </li>
                }
                else
                {
                    @foreach (var msg in _messages)
                    {
                        var incoming = msg.ToUserId == CurrentUserId;

                        var cls = $"justify-content-{(incoming ? "start" : "end")}";

                        <li class="d-flex @cls">
                            <p class="single-msg @(incoming ? "other" : "me")">
                                @msg.Message
                                <br>
                                <small class="msg-dt">
                                    @if (msg.SentOn.Date == DateTime.Today.Date)
                                    {
                                        <span>@msg.SentOn.ToShortTimeString()</span>
                                    }
                                    else
                                    {
                                        <span>@msg.SentOn.ToShortDateString() | @msg.SentOn.ToShortTimeString()</span>
                                    }
                                </small>
                            </p>
                        </li>
                    }
                }
            </ul>
        </div>
        <div class="message-input">

            <EditForm Model="_newMessage" OnValidSubmit="HandleSendMessageSubmit">
                <div class="">
                    <div class="input-group">
                        <InputText @bind-Value="_newMessage" placeholder="Enter message here..." class="form-control" />
                        <button class="btn btn-success " type="submit">Send</button>
                    </div>
                </div>
            </EditForm>

        </div>
    </div>
}